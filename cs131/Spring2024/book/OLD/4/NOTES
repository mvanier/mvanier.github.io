Notes on assignment 4
=====================

**********

Primary goal: to extend the type checker to work with arrays.

Actually, I would go further: remove _everything_ to do with arrays from the
student version and make them implement all of it.  Then make them write array
functions e.g. quicksort using the new features.

Idea: implement an imperative sudoku solver!

**********

Another idea: like in assignment 1, implement local variables!  This time,
though, we have to type check them too.

Syntax:

  (locals [r : int] [b : bool])

Note that for this to work we have to be able to compute default values for all
types.  For this language, it's not hard.

**********

Another idea (which we won't implement this year) is to implement lists as a
built-in type.  See exercise 8 on page 460.

**********

In typed Imp, we use literal booleans (#t, #f) and unit values (#u), which
Ramsey doesn't.  Note that this means that we will have to extend the type rules
on page 396 as well as the types and constructors for literals.  I would propose
that instead of:

    ---------------------------------
    Gamma_xi etc. |- Literal(v) : Int

we have e.g.

    -----------------------------
    Gamma_xi etc. |- Int(v) : Int

    -------------------------------
    Gamma_xi etc. |- Bool(v) : Bool

    ----------------------------
    Gamma_xi etc. |- Unit : Unit

or:

    --------------------------------------
    Gamma_xi etc. |- Literal(Int(i)) : Int

    ----------------------------------------
    Gamma_xi etc. |- Literal(Bool(b)) : Bool

    -------------------------------------
    Gamma_xi etc. |- Literal(Unit) : Unit

which I like better.

**********

Do we define a `printc` function?  Ramsey doesn't.  It would have type 
`int -> unit`.

**********

P. 398: Note that there is no `it` top-level variable.

**********

P. 399: Note that functions can be recursive.

The REDEFINE equation on p. 399 can be simplified above the line, since
Gamma_phi doesn't need to be extended with f (because f is already there).

**********

P. 404: The definition of parameterError doesn't seem to have the right base
cases.  What happens when the types are all correct and the argument list is the
right length but there are no more parameters?  You get an error, even though
you shouldn't.

**********

P. 411: ARRAY-PUT could return a unit type.

**********


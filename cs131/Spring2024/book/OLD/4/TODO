TODO list for assignment 4
==========================

== 2023

TODO items moved to src/typed_imp directory.

I especially like creating a new `(array ...)` form:

>>> (array 1 2 3 4 5)
[1 2 3 4 5] : int array
>>> (array #t #f #f)
[#t #f #f] : bool array
>>> (array #t 0)
<type error>

(Also need to spell out operational semantics.)
(Maybe operational semantics could be a problem ...?)

== 2021

New problem ideas:

>>> 1

Assume you don't check that top-level "val" forms don't change the type of a
global variable.  Write a short example showing what bad things can happen.
(Need to be more specific.)

ALSO: Do the same thing with function types.

>>> 2

If we leave off the (') in typecheck_define by writing `env` instead of `env'`,
what Bad Thing happens?  Why?  (You can't typecheck recursive functions.)


== OLD

Part B: Creating default values for arrays: you don't need to make the
default_value_for_type function recursive!  Arrays can always be initialized as 
[| |] and it will work.  Given that the types are set, this is equivalent to
Array.make 0 <default value>.


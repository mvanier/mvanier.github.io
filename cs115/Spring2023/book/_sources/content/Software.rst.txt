.. _Software:

Installing the course software
==============================

Installing the GHC compiler
---------------------------

In this course, we will be using the Haskell_ programming language.
Specifically, we will be using the GHC_ Haskell compiler.
We also assume a certain level of familiarity with a (Unix-like) terminal,
such as you would get in CS 1 or CS 4.

The easiest way to install GHC
is to use the `ghcup <https://www.haskell.org/ghcup>`_ installer.
See the `ghcup user guide <https://www.haskell.org/ghcup/guide>`_
for instructions on how to use it.

``ghcup`` is a program intended to be run from a Unix-like terminal.
If your computer runs any flavor of Linux or MacOS,
you have direct access to such a terminal.
If your computer runs Windows,
you should install the `Windows Subsystem for Linux`_ (WSL).
Once this is done, you can run a Unix terminal on Windows
and install ``ghcup`` on that.

.. note::

   If you intend to use WSL, make sure you install the latest version!
   Early versions (|eg| version 1) do not work with GHC.
   In some cases, especially with older computers,
   installation will default to version 1,
   which will cause GHC installation to fail.
   In that case, contact the instuctor on Piazza.

   Also, once you have installed WSL, you can run it directly from the
   terminal embedded in `Visual Studio Code`_, which we recommend
   for Windows users.  Be sure not to select the Powershell terminal when
   starting a terminal; that isn't part of WSL.

After installing GHC, you want to make sure you are running the latest version,
which as of this writing is |ghcversion|.  To verify this, type:

.. code-block:: text

   $ ghc --version

You should see:

..
   We use "parsed-literal" here to allow substitutions.
   It's a nasty hack.

.. parsed-literal::

   The Glorious Glasgow Haskell Compilation System, version |ghcversion|

If you see a lower version number, you need to upgrade.  In a terminal, enter
these commands:

.. parsed-literal::

   $ ghcup install ghc |ghcversion|
   $ ghcup set ghc |ghcversion|

This should install the latest version.  Type

.. code-block:: text

   $ ghc --version

to verify that.  If that doesn't work, see a TA or the instructor.

You can also run

.. code-block:: text

   $ ghcup tui

to get a nice text user interface (TUI)
which allows you to interactively upgrade all GHC software
and tells you all the versions you've installed.
This will work on MacOS, Linux, and (maybe) on Windows with WSL.
It's not essential but it is pleasant to use.


The ``cabal`` package manager
-----------------------------

When you install GHC, the ``cabal`` package manager will be installed
as well.  ``cabal`` is for Haskell what ``opam`` is for OCaml.
We will need ``cabal`` to install some code libraries.
You can check the installation status of ``cabal`` using ``ghcup tui``
as described above.  Make sure you install the most recent version.


The ``HLS`` language server
---------------------------

``ghcup`` will also install the ``HLS`` language server.
This is not essential, but if you are using Visual Studio Code
as your editor, it will enable code completion and other IDE-like
functionality.  In this case, you should also install the
`Haskell for Visual Studio Code
<https://marketplace.visualstudio.com/items?itemName=haskell.haskell>`_
extension to make best use of ``HLS``.


The ``hoogle`` documentation browser
------------------------------------

When writing Haskell, your best friend is the Hoogle_ web site.  This is a site
which allows you to search the documentation of Haskell functions and modules.
You can enter the name of a function, a module, or even a type signature (!)
and find the relevant documentation (including source code) very easily.  You
should bookmark this site as long as you're using Haskell.


----

.. rubric:: Footnotes


TODO for this assignment
========================

**********

... Maybe a proper test script ...?

**********

Part D's datatype can be done better:

  type Tag = String

  data Entity = LT_E | GT_E | AMP_E
     deriving (Show)

  data Elem =
      TextE String     -- raw text
    | EntE Entity      -- entity
    | FormE Tag [Elem] -- tagged data
    deriving (Show)

The problem with this is that if you are parsing an XML file, you can have
top-level text forms, which is kind of gross.  It might be an interesting
question to ask students how they would rewrite this so as to make top-level
text forms unrepresentable!

I'm thinking of something like this:

  type Tag = String

  data Entity = LT_E | GT_E | AMP_E
     deriving (Show)

  data Doc = Doc [TLForm]
     deriving (Show)

  data TLForm = TLForm Tag [Elem]  -- top-level form
     deriving (Show)

  data Elem =
      TextE String     -- raw text
    | EntE Entity      -- entity
    | FormE Tag [Elem] -- tagged data
    deriving (Show)

Of course, this has the drawback of making top-level forms "different" from
internal forms, when in fact they are the same.  You could fix it like this:

  type Tag = String

  data Entity = LT_E | GT_E | AMP_E
     deriving (Show)

  data Doc = Doc [TLForm]
     deriving (Show)

  data TLForm = TLForm Tag [Form]  -- top-level form
     deriving (Show)

  data Form = Form Tag [Elem]  -- tagged data
     deriving (Show)

  data Elem =
      TextE String     -- raw text
    | EntE Entity      -- entity
    | FormE Form
    deriving (Show)

This is a bulkier representation but it is very precise.

**********


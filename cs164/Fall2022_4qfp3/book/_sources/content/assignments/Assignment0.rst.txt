Assignment 0: Getting set up
============================

Due date
--------

This assignment has no due date, and isn't graded.

Overview
--------

This pseudo-assignment covers the steps you need to go through so that you can
start working on the real assignments (starting with assignment 1).  It has
these steps:

1. Choose a partner.  All homework will be done collectively by groups of two
   students.

2. Get OCaml installed.  Also install all necessary supporting packages.

3. Create a *private* Github repository.  Add both partners to the repository.
   Add the instructor (Mike Vanier, Github name `mvanier`) to the repo.

Once this is done, you are ready to start working on compilers!  The next
sections go through the steps in more detail.

If you have any problems completing any of the steps, let the instructor know.

Choosing a partner
------------------

We will leave this step up to you.  We can discuss it in class.  If necessary,
we can assign students together to groups.

Getting OCaml installed
-----------------------

See the document :doc:`Installing_OCaml`.


Creating a Github repository
----------------------------

We expect that most of you have used the Git version control system before.
If you haven't, don't worry: you only need to learn a handful of Git commands
in order to work with Git.  The primary ones are `git commit`, `git pull` and
`git push`.  If necessary, you should read some online tutorials.  There are
also books you can read, such as `Learn Enough Git To Be Dangerous`_.

Learning Git is likely to be one of the most useful things you ever do as a
programmer, so don't feel like this is a waste of time!

.. _`Learn Enough Git To Be Dangerous`: https://www.learnenough.com/git-tutorial

.. warning::

   We *very strongly* recommend that you do not try to use advanced Git
   commands (such as ``git rebase``) unless you know exactly what you are doing.
   Even though Git is a source code repository system, it is possible to mess
   up a repo through incorrect use, and in extreme cases you might have to
   recreate the repository from scratch.  Be conservative!

You also need to have an account with Github_, which is a website that offers
free hosting for Github repositories.  Note that we require that your
repository be *private*, so other students (and future students!) will not be
able to look at your code -- Honor Code rules apply.  Newly-created Github
repositories may default to public access, and you need to change that.

.. _Github: https://github.com/

Do not write any code for the assignments until your Github repo is set up and
until you have added the instructor (Mike) as a full contributor to the repo.


